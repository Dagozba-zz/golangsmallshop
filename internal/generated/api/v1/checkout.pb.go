// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v1/checkout.proto

package checkout

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The message containing the created basketId
type BasketReply struct {
	BasketId             string   `protobuf:"bytes,1,opt,name=basketId,proto3" json:"basketId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasketReply) Reset()         { *m = BasketReply{} }
func (m *BasketReply) String() string { return proto.CompactTextString(m) }
func (*BasketReply) ProtoMessage()    {}
func (*BasketReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_checkout_3ebee9caf288178b, []int{0}
}
func (m *BasketReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasketReply.Unmarshal(m, b)
}
func (m *BasketReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasketReply.Marshal(b, m, deterministic)
}
func (dst *BasketReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasketReply.Merge(dst, src)
}
func (m *BasketReply) XXX_Size() int {
	return xxx_messageInfo_BasketReply.Size(m)
}
func (m *BasketReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BasketReply.DiscardUnknown(m)
}

var xxx_messageInfo_BasketReply proto.InternalMessageInfo

func (m *BasketReply) GetBasketId() string {
	if m != nil {
		return m.BasketId
	}
	return ""
}

// Item request message that sends the target basketId and the itemId (Pre defined in the server)
type ItemRequest struct {
	BasketId             string   `protobuf:"bytes,1,opt,name=basketId,proto3" json:"basketId,omitempty"`
	ItemId               string   `protobuf:"bytes,2,opt,name=itemId,proto3" json:"itemId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemRequest) Reset()         { *m = ItemRequest{} }
func (m *ItemRequest) String() string { return proto.CompactTextString(m) }
func (*ItemRequest) ProtoMessage()    {}
func (*ItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_checkout_3ebee9caf288178b, []int{1}
}
func (m *ItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemRequest.Unmarshal(m, b)
}
func (m *ItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemRequest.Marshal(b, m, deterministic)
}
func (dst *ItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemRequest.Merge(dst, src)
}
func (m *ItemRequest) XXX_Size() int {
	return xxx_messageInfo_ItemRequest.Size(m)
}
func (m *ItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ItemRequest proto.InternalMessageInfo

func (m *ItemRequest) GetBasketId() string {
	if m != nil {
		return m.BasketId
	}
	return ""
}

func (m *ItemRequest) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

// Reply message when scanning a new item into the given basket
type ItemReply struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	ServerError          string   `protobuf:"bytes,2,opt,name=serverError,proto3" json:"serverError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemReply) Reset()         { *m = ItemReply{} }
func (m *ItemReply) String() string { return proto.CompactTextString(m) }
func (*ItemReply) ProtoMessage()    {}
func (*ItemReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_checkout_3ebee9caf288178b, []int{2}
}
func (m *ItemReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemReply.Unmarshal(m, b)
}
func (m *ItemReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemReply.Marshal(b, m, deterministic)
}
func (dst *ItemReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemReply.Merge(dst, src)
}
func (m *ItemReply) XXX_Size() int {
	return xxx_messageInfo_ItemReply.Size(m)
}
func (m *ItemReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemReply.DiscardUnknown(m)
}

var xxx_messageInfo_ItemReply proto.InternalMessageInfo

func (m *ItemReply) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *ItemReply) GetServerError() string {
	if m != nil {
		return m.ServerError
	}
	return ""
}

// Request message that sends the basketId to request the basket to calculate the total amount of
type TotalAmountRequest struct {
	BasketId             string   `protobuf:"bytes,1,opt,name=basketId,proto3" json:"basketId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalAmountRequest) Reset()         { *m = TotalAmountRequest{} }
func (m *TotalAmountRequest) String() string { return proto.CompactTextString(m) }
func (*TotalAmountRequest) ProtoMessage()    {}
func (*TotalAmountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_checkout_3ebee9caf288178b, []int{3}
}
func (m *TotalAmountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalAmountRequest.Unmarshal(m, b)
}
func (m *TotalAmountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalAmountRequest.Marshal(b, m, deterministic)
}
func (dst *TotalAmountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalAmountRequest.Merge(dst, src)
}
func (m *TotalAmountRequest) XXX_Size() int {
	return xxx_messageInfo_TotalAmountRequest.Size(m)
}
func (m *TotalAmountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalAmountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TotalAmountRequest proto.InternalMessageInfo

func (m *TotalAmountRequest) GetBasketId() string {
	if m != nil {
		return m.BasketId
	}
	return ""
}

// Reply message containing the total price of items contained within the provided basketId
type TotalAmountReply struct {
	TotalAmount          int64    `protobuf:"varint,1,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalAmountReply) Reset()         { *m = TotalAmountReply{} }
func (m *TotalAmountReply) String() string { return proto.CompactTextString(m) }
func (*TotalAmountReply) ProtoMessage()    {}
func (*TotalAmountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_checkout_3ebee9caf288178b, []int{4}
}
func (m *TotalAmountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalAmountReply.Unmarshal(m, b)
}
func (m *TotalAmountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalAmountReply.Marshal(b, m, deterministic)
}
func (dst *TotalAmountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalAmountReply.Merge(dst, src)
}
func (m *TotalAmountReply) XXX_Size() int {
	return xxx_messageInfo_TotalAmountReply.Size(m)
}
func (m *TotalAmountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalAmountReply.DiscardUnknown(m)
}

var xxx_messageInfo_TotalAmountReply proto.InternalMessageInfo

func (m *TotalAmountReply) GetTotalAmount() int64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

// Request message that provides a basketId to remove it from the server
type RemoveBasketRequest struct {
	BasketId             string   `protobuf:"bytes,1,opt,name=basketId,proto3" json:"basketId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBasketRequest) Reset()         { *m = RemoveBasketRequest{} }
func (m *RemoveBasketRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveBasketRequest) ProtoMessage()    {}
func (*RemoveBasketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_checkout_3ebee9caf288178b, []int{5}
}
func (m *RemoveBasketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBasketRequest.Unmarshal(m, b)
}
func (m *RemoveBasketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBasketRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveBasketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBasketRequest.Merge(dst, src)
}
func (m *RemoveBasketRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveBasketRequest.Size(m)
}
func (m *RemoveBasketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBasketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBasketRequest proto.InternalMessageInfo

func (m *RemoveBasketRequest) GetBasketId() string {
	if m != nil {
		return m.BasketId
	}
	return ""
}

// Reply message that provides the result of the delete request
type RemoveBasketReply struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	ServerError          string   `protobuf:"bytes,2,opt,name=serverError,proto3" json:"serverError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBasketReply) Reset()         { *m = RemoveBasketReply{} }
func (m *RemoveBasketReply) String() string { return proto.CompactTextString(m) }
func (*RemoveBasketReply) ProtoMessage()    {}
func (*RemoveBasketReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_checkout_3ebee9caf288178b, []int{6}
}
func (m *RemoveBasketReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBasketReply.Unmarshal(m, b)
}
func (m *RemoveBasketReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBasketReply.Marshal(b, m, deterministic)
}
func (dst *RemoveBasketReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBasketReply.Merge(dst, src)
}
func (m *RemoveBasketReply) XXX_Size() int {
	return xxx_messageInfo_RemoveBasketReply.Size(m)
}
func (m *RemoveBasketReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBasketReply.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBasketReply proto.InternalMessageInfo

func (m *RemoveBasketReply) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func (m *RemoveBasketReply) GetServerError() string {
	if m != nil {
		return m.ServerError
	}
	return ""
}

func init() {
	proto.RegisterType((*BasketReply)(nil), "checkout.BasketReply")
	proto.RegisterType((*ItemRequest)(nil), "checkout.ItemRequest")
	proto.RegisterType((*ItemReply)(nil), "checkout.ItemReply")
	proto.RegisterType((*TotalAmountRequest)(nil), "checkout.TotalAmountRequest")
	proto.RegisterType((*TotalAmountReply)(nil), "checkout.TotalAmountReply")
	proto.RegisterType((*RemoveBasketRequest)(nil), "checkout.RemoveBasketRequest")
	proto.RegisterType((*RemoveBasketReply)(nil), "checkout.RemoveBasketReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CheckoutClient is the client API for Checkout service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckoutClient interface {
	// Creates a new Basket in the server, receives a BasketRequest message and produces a BasketReply
	CreateBasket(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BasketReply, error)
	// Scans an Item and adds it to the Basket which is referenced in the ItemRequest message. Returns an ItemReply
	ScanItem(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*ItemReply, error)
	// Returns the total cost of a given basket, referenced in the TotalAmountRequest message and returns the amount in the TotalAmountReply
	GetTotalAmount(ctx context.Context, in *TotalAmountRequest, opts ...grpc.CallOption) (*TotalAmountReply, error)
	// Removes the basket referenced in the RemoveBasketRequest message. Returns whether it was successful or not.
	RemoveBasket(ctx context.Context, in *RemoveBasketRequest, opts ...grpc.CallOption) (*RemoveBasketReply, error)
}

type checkoutClient struct {
	cc *grpc.ClientConn
}

func NewCheckoutClient(cc *grpc.ClientConn) CheckoutClient {
	return &checkoutClient{cc}
}

func (c *checkoutClient) CreateBasket(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BasketReply, error) {
	out := new(BasketReply)
	err := c.cc.Invoke(ctx, "/checkout.Checkout/CreateBasket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkoutClient) ScanItem(ctx context.Context, in *ItemRequest, opts ...grpc.CallOption) (*ItemReply, error) {
	out := new(ItemReply)
	err := c.cc.Invoke(ctx, "/checkout.Checkout/ScanItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkoutClient) GetTotalAmount(ctx context.Context, in *TotalAmountRequest, opts ...grpc.CallOption) (*TotalAmountReply, error) {
	out := new(TotalAmountReply)
	err := c.cc.Invoke(ctx, "/checkout.Checkout/GetTotalAmount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkoutClient) RemoveBasket(ctx context.Context, in *RemoveBasketRequest, opts ...grpc.CallOption) (*RemoveBasketReply, error) {
	out := new(RemoveBasketReply)
	err := c.cc.Invoke(ctx, "/checkout.Checkout/RemoveBasket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckoutServer is the server API for Checkout service.
type CheckoutServer interface {
	// Creates a new Basket in the server, receives a BasketRequest message and produces a BasketReply
	CreateBasket(context.Context, *empty.Empty) (*BasketReply, error)
	// Scans an Item and adds it to the Basket which is referenced in the ItemRequest message. Returns an ItemReply
	ScanItem(context.Context, *ItemRequest) (*ItemReply, error)
	// Returns the total cost of a given basket, referenced in the TotalAmountRequest message and returns the amount in the TotalAmountReply
	GetTotalAmount(context.Context, *TotalAmountRequest) (*TotalAmountReply, error)
	// Removes the basket referenced in the RemoveBasketRequest message. Returns whether it was successful or not.
	RemoveBasket(context.Context, *RemoveBasketRequest) (*RemoveBasketReply, error)
}

func RegisterCheckoutServer(s *grpc.Server, srv CheckoutServer) {
	s.RegisterService(&_Checkout_serviceDesc, srv)
}

func _Checkout_CreateBasket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutServer).CreateBasket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Checkout/CreateBasket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutServer).CreateBasket(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checkout_ScanItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutServer).ScanItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Checkout/ScanItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutServer).ScanItem(ctx, req.(*ItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checkout_GetTotalAmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TotalAmountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutServer).GetTotalAmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Checkout/GetTotalAmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutServer).GetTotalAmount(ctx, req.(*TotalAmountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checkout_RemoveBasket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveBasketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckoutServer).RemoveBasket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkout.Checkout/RemoveBasket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckoutServer).RemoveBasket(ctx, req.(*RemoveBasketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Checkout_serviceDesc = grpc.ServiceDesc{
	ServiceName: "checkout.Checkout",
	HandlerType: (*CheckoutServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBasket",
			Handler:    _Checkout_CreateBasket_Handler,
		},
		{
			MethodName: "ScanItem",
			Handler:    _Checkout_ScanItem_Handler,
		},
		{
			MethodName: "GetTotalAmount",
			Handler:    _Checkout_GetTotalAmount_Handler,
		},
		{
			MethodName: "RemoveBasket",
			Handler:    _Checkout_RemoveBasket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/checkout.proto",
}

func init() { proto.RegisterFile("api/v1/checkout.proto", fileDescriptor_checkout_3ebee9caf288178b) }

var fileDescriptor_checkout_3ebee9caf288178b = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0xfd, 0xe0, 0x4b, 0x48, 0x99, 0x12, 0xa3, 0x4b, 0x20, 0x64, 0xd1, 0x84, 0xec, 0x49, 0x2f,
	0xad, 0xa8, 0x07, 0x6f, 0x06, 0x09, 0x31, 0x24, 0x7a, 0xa9, 0xfe, 0x81, 0x02, 0x23, 0x12, 0x5a,
	0xb6, 0x6e, 0xa7, 0x24, 0xfc, 0x1c, 0xff, 0xa9, 0xe9, 0xb6, 0xa5, 0x8b, 0x8a, 0x9a, 0x78, 0x7c,
	0x6f, 0xde, 0x7b, 0xd3, 0x9d, 0x57, 0x68, 0xf9, 0xd1, 0xc2, 0x5d, 0xf7, 0xdd, 0xe9, 0x0b, 0x4e,
	0x97, 0x32, 0x21, 0x27, 0x52, 0x92, 0x24, 0xb3, 0x0a, 0xcc, 0xbb, 0x73, 0x29, 0xe7, 0x01, 0xba,
	0x9a, 0x9f, 0x24, 0xcf, 0x2e, 0x86, 0x11, 0x6d, 0x32, 0x99, 0x38, 0x03, 0xfb, 0xd6, 0x8f, 0x97,
	0x48, 0x1e, 0x46, 0xc1, 0x86, 0x71, 0xb0, 0x26, 0x1a, 0x8e, 0x67, 0x9d, 0x4a, 0xaf, 0x72, 0x5a,
	0xf7, 0xb6, 0x58, 0x0c, 0xc0, 0x1e, 0x13, 0x86, 0x1e, 0xbe, 0x26, 0x18, 0xd3, 0x77, 0x52, 0xd6,
	0x86, 0xda, 0x82, 0x30, 0x1c, 0xcf, 0x3a, 0x55, 0x3d, 0xc9, 0x91, 0x18, 0x41, 0x3d, 0x8b, 0x48,
	0x77, 0xb5, 0xa1, 0xa6, 0x30, 0x4e, 0x02, 0xd2, 0x76, 0xcb, 0xcb, 0x11, 0xeb, 0x81, 0x1d, 0xa3,
	0x5a, 0xa3, 0x1a, 0x29, 0x25, 0x55, 0x9e, 0x60, 0x52, 0xe2, 0x1c, 0xd8, 0x93, 0x24, 0x3f, 0x18,
	0x84, 0x32, 0x59, 0xd1, 0x2f, 0x3e, 0x48, 0x5c, 0xc1, 0xe1, 0x8e, 0x23, 0xdd, 0xdf, 0x03, 0x9b,
	0x4a, 0x4e, 0x5b, 0xfe, 0x7b, 0x26, 0x25, 0xfa, 0xd0, 0xf4, 0x30, 0x94, 0x6b, 0x2c, 0x4e, 0xf4,
	0xf3, 0xa2, 0x07, 0x38, 0xda, 0xb5, 0xfc, 0xe9, 0xa5, 0x17, 0x6f, 0x55, 0xb0, 0x86, 0x79, 0x91,
	0xec, 0x06, 0x1a, 0x43, 0x85, 0x3e, 0xe5, 0xd9, 0xac, 0xed, 0x64, 0xcd, 0x3a, 0x45, 0xb3, 0xce,
	0x28, 0x6d, 0x96, 0xb7, 0x9c, 0xed, 0xbf, 0x60, 0x7c, 0x85, 0xf8, 0xc7, 0xae, 0xc1, 0x7a, 0x9c,
	0xfa, 0xab, 0xb4, 0x02, 0x66, 0x88, 0x8c, 0x56, 0x79, 0xf3, 0x23, 0x9d, 0x39, 0xef, 0xe1, 0xe0,
	0x0e, 0xc9, 0x38, 0x21, 0x3b, 0x2e, 0x85, 0x9f, 0xbb, 0xe0, 0x7c, 0xcf, 0xb4, 0x48, 0x6b, 0x98,
	0x47, 0x62, 0x27, 0xa5, 0xfa, 0x8b, 0x7b, 0xf3, 0xee, 0xbe, 0xb1, 0x4e, 0x9b, 0xd4, 0xf4, 0xf3,
	0x2f, 0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x94, 0x0c, 0xa0, 0x1c, 0x09, 0x03, 0x00, 0x00,
}
